// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// stratEst_cpp
List stratEst_cpp(arma::mat data, arma::mat strategies, arma::vec shares, arma::mat covariates, arma::vec cluster, std::string response, std::string r_responses, std::string r_trembles, std::string select, std::string crit, std::string SE, int outer_runs, double outer_tol_eval, int outer_max_eval, int inner_runs, double inner_tol_eval, int inner_max_eval, int LCR_runs, int LCR_tol_eval, int LCR_max_eval, int BS_samples, int newton_stepsize, double penalty);
RcppExport SEXP _stratEst_stratEst_cpp(SEXP dataSEXP, SEXP strategiesSEXP, SEXP sharesSEXP, SEXP covariatesSEXP, SEXP clusterSEXP, SEXP responseSEXP, SEXP r_responsesSEXP, SEXP r_tremblesSEXP, SEXP selectSEXP, SEXP critSEXP, SEXP SESEXP, SEXP outer_runsSEXP, SEXP outer_tol_evalSEXP, SEXP outer_max_evalSEXP, SEXP inner_runsSEXP, SEXP inner_tol_evalSEXP, SEXP inner_max_evalSEXP, SEXP LCR_runsSEXP, SEXP LCR_tol_evalSEXP, SEXP LCR_max_evalSEXP, SEXP BS_samplesSEXP, SEXP newton_stepsizeSEXP, SEXP penaltySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type strategies(strategiesSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type shares(sharesSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type covariates(covariatesSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type cluster(clusterSEXP);
    Rcpp::traits::input_parameter< std::string >::type response(responseSEXP);
    Rcpp::traits::input_parameter< std::string >::type r_responses(r_responsesSEXP);
    Rcpp::traits::input_parameter< std::string >::type r_trembles(r_tremblesSEXP);
    Rcpp::traits::input_parameter< std::string >::type select(selectSEXP);
    Rcpp::traits::input_parameter< std::string >::type crit(critSEXP);
    Rcpp::traits::input_parameter< std::string >::type SE(SESEXP);
    Rcpp::traits::input_parameter< int >::type outer_runs(outer_runsSEXP);
    Rcpp::traits::input_parameter< double >::type outer_tol_eval(outer_tol_evalSEXP);
    Rcpp::traits::input_parameter< int >::type outer_max_eval(outer_max_evalSEXP);
    Rcpp::traits::input_parameter< int >::type inner_runs(inner_runsSEXP);
    Rcpp::traits::input_parameter< double >::type inner_tol_eval(inner_tol_evalSEXP);
    Rcpp::traits::input_parameter< int >::type inner_max_eval(inner_max_evalSEXP);
    Rcpp::traits::input_parameter< int >::type LCR_runs(LCR_runsSEXP);
    Rcpp::traits::input_parameter< int >::type LCR_tol_eval(LCR_tol_evalSEXP);
    Rcpp::traits::input_parameter< int >::type LCR_max_eval(LCR_max_evalSEXP);
    Rcpp::traits::input_parameter< int >::type BS_samples(BS_samplesSEXP);
    Rcpp::traits::input_parameter< int >::type newton_stepsize(newton_stepsizeSEXP);
    Rcpp::traits::input_parameter< double >::type penalty(penaltySEXP);
    rcpp_result_gen = Rcpp::wrap(stratEst_cpp(data, strategies, shares, covariates, cluster, response, r_responses, r_trembles, select, crit, SE, outer_runs, outer_tol_eval, outer_max_eval, inner_runs, inner_tol_eval, inner_max_eval, LCR_runs, LCR_tol_eval, LCR_max_eval, BS_samples, newton_stepsize, penalty));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_stratEst_stratEst_cpp", (DL_FUNC) &_stratEst_stratEst_cpp, 23},
    {NULL, NULL, 0}
};

RcppExport void R_init_stratEst(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
